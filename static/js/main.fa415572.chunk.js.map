{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","countryInput","isSubmited","isLoaded","countryOutput","name","capital","flag","currency","nativeName","population","language","error","handleSubmit","bind","handleChange","convertPopulation","e","this","setState","target","value","toFixed","className","nativeLang","alt","src","preventDefault","fetch","then","res","json","result","currencies","languages","catch","err","onSubmit","type","onChange","displayResults","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAIqBA,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,aAAc,GACdC,YAAY,EACZC,UAAU,EACVC,cAAe,GACfC,KAAM,GACNC,QAAS,GACTC,KAAM,GACNC,SAAU,GACVC,WAAY,GACZC,WAAY,EACZC,SAAU,GAEVC,MAAO,MAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBAnBR,E,0EAsBNG,GACXC,KAAKC,SAAS,CAAElB,aAAcgB,EAAEG,OAAOC,U,wCAGvBX,GAChB,OAAGA,GAAa,IACR,GAAN,QAAWA,EAAW,KAASY,QAAQ,GAAvC,QACSZ,EAAa,KAAWA,GAAc,IACzC,GAAN,QAAWA,EAAW,KAAMY,QAAQ,GAApC,SAEOZ,I,uCAMT,OAAIQ,KAAKlB,MAAMY,MACN,+EACGM,KAAKlB,MAAMG,UAAYe,KAAKlB,MAAME,WACrC,yDACGgB,KAAKlB,MAAME,WAInB,6BACE,yBAAKqB,UAAU,kBACf,+BACE,4BACE,oCACA,4BAAKL,KAAKlB,MAAMK,KAAhB,KAAwBa,KAAKlB,MAAMS,WAAnC,MAEF,4BACE,uCACA,4BAAKS,KAAKlB,MAAMM,UAElB,4BACE,wCACA,4BAAKY,KAAKlB,MAAMQ,WAElB,4BACE,0CACA,4BAAKU,KAAKF,kBAAkBE,KAAKlB,MAAMU,cAEzC,4BACE,wCACA,4BAAKQ,KAAKlB,MAAMW,SAAhB,KAA4BO,KAAKlB,MAAMwB,WAAvC,QAOJ,yBAAKD,UAAU,kBACb,6CACA,yBAAKA,UAAU,OAAOE,IAAI,OAAOC,IAAKR,KAAKlB,MAAMO,SAjChD,6C,mCAwCEU,GAAI,IAAD,OACdA,EAAEU,iBACFT,KAAKC,SAAS,CACZjB,YAAY,IAEd0B,MAAM,yCAAD,OAA0CV,KAAKlB,MAAMC,eACvD4B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKb,SAAS,CACZhB,UAAU,EACVE,KAAM2B,EAAO,GAAG3B,KAChBC,QAAS0B,EAAO,GAAG1B,QACnBC,KAAMyB,EAAO,GAAGzB,KAChBH,cAAe4B,EACfxB,SAAUwB,EAAO,GAAGC,WAAW,GAAG5B,KAClCI,WAAYuB,EAAO,GAAGvB,WACtBC,WAAYsB,EAAO,GAAGtB,WACtBC,SAAUqB,EAAO,GAAGE,UAAU,GAAG7B,KACjCmB,WAAYQ,EAAO,GAAGE,UAAU,GAAGzB,WACnCG,MAAO,UAGVuB,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZhB,UAAU,EACVS,MAAOwB,S,+BAKb,OACE,6BACE,yBAAKb,UAAU,aACb,0BAAMc,SAAUnB,KAAKL,cACnB,gDACA,2BACEyB,KAAK,OACLf,UAAU,gBACVgB,SAAUrB,KAAKH,eAEjB,2BAAOuB,KAAK,SAASjB,MAAM,YAE7B,yBAAKE,UAAU,WAAWL,KAAKsB,wB,GA9HRC,cCCjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fa415572.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.scss';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryInput: '',\n      isSubmited: false,\n      isLoaded: false,\n      countryOutput: [],\n      name: [],\n      capital: [],\n      flag: [],\n      currency: [],\n      nativeName: [],\n      population: 0,\n      language: [],\n   \n      error: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.convertPopulation = this.convertPopulation.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ countryInput: e.target.value });\n  }\n\n  convertPopulation(population){\n    if(population >=1000000){\n      return `${(population/1000000).toFixed(2)} mln`\n    } else if (population < 1000000 && population >= 1000){\n      return `${(population/1000).toFixed(2)} tys.`\n    } else {\n      return population\n    }\n\n  }\n\n  displayResults() {\n    if (this.state.error) {\n      return <div>Incorrect country name. Try one more time! :)</div>;\n    } else if (!this.state.isLoaded && this.state.isSubmited) {\n      return <div>Loading... Be patient ;)</div>;\n    } else if (!this.state.isSubmited) {\n      return <div>No results</div>;\n    } else {\n      return (\n        <div>\n          <div className=\"info_container\" >\n          <table>\n            <tr>\n              <th>Name</th>\n              <td>{this.state.name} ({this.state.nativeName})</td>\n            </tr>\n            <tr>\n              <th>Capital</th>\n              <td>{this.state.capital}</td>\n            </tr>\n            <tr>\n              <th>Currency</th>\n              <td>{this.state.currency}</td>\n            </tr>\n            <tr>\n              <th>Population</th>\n              <td>{this.convertPopulation(this.state.population)}</td>\n            </tr>\n            <tr>\n              <th>Language</th>\n              <td>{this.state.language} ({this.state.nativeLang})</td>\n            </tr>\n         \n          </table>\n\n          </div>\n         \n          <div className=\"flag_container\">\n            <h4>National flag</h4>\n            <img className=\"flag\" alt=\"flag\" src={this.state.flag} />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      isSubmited: true\n    });\n    fetch(`https://restcountries.eu/rest/v2/name/${this.state.countryInput}`)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          isLoaded: true,\n          name: result[0].name,\n          capital: result[0].capital,\n          flag: result[0].flag,\n          countryOutput: result,\n          currency: result[0].currencies[0].name,\n          nativeName: result[0].nativeName,\n          population: result[0].population,\n          language: result[0].languages[0].name,\n          nativeLang: result[0].languages[0].nativeName,\n          error: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          isLoaded: true,\n          error: err\n        });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <h1>Choose a country</h1>\n            <input\n              type=\"text\"\n              className=\"country_input\"\n              onChange={this.handleChange}\n            />\n            <input type=\"submit\" value=\"Search\" />\n          </form>\n          <div className=\"results\">{this.displayResults()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}